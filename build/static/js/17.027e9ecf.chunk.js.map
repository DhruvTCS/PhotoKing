{"version":3,"file":"static/js/17.027e9ecf.chunk.js","mappings":"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","sources":["components/molecules/Dashboard/SingleAlbumPage/myWorker.worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import imageCompression from 'browser-image-compression';\n\nself.onmessage = async (e: MessageEvent<{ files: File[], work: number }>) => {\n    const files = e.data.files;\n    console.log(e.data.work, \"started\")\n\n    try {\n        const options = {\n            maxSizeMB: 3,\n            maxWidthOrHeight: 1920,\n            useWebWorker: false,\n        };\n\n        const compressedFiles: File[] = [];\n\n        for (const file of files) {\n            try {\n                let compressedFile: File;\n                if (file.size / 1024 / 1024 > 3) {\n                    const compressedBlob = await compressImage(file);\n                    compressedFile = blobToFile(compressedBlob, file.name);\n                } else {\n                    compressedFile = file;\n                }\n                compressedFiles.push(compressedFile);\n                self.postMessage({ type: \"progress\", completedFiles: 1 });\n            } catch (error) {\n                console.error('Error compressing file:', error);\n            }\n        }\n\n        console.log(e.data.work, \"end\");\n        self.postMessage({ type: \"complete\", files: compressedFiles });\n    } catch (error) {\n        console.error('Error in worker:', error);\n    }\n};\n\nconst blobToFile = (blob: Blob, fileName: string): File => {\n    return new File([blob], fileName, { type: blob.type });\n};\n\nconst compressImage = async (file: File): Promise<Blob> => {\n    const options = {\n        maxSizeMB: 2,\n        maxWidthOrHeight: 1920,\n        useWebWorker: false,\n    };\n\n    try {\n        const compressedBlob = await imageCompression(file, options);\n        return compressedBlob;\n    } catch (error) {\n        console.error('Error compressing image:', error);\n        throw error;\n    }\n};\n\nexport { };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [641], () => (__webpack_require__(2017)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"1ec861c5\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t17: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkPhotoKing\"] = self[\"webpackChunkPhotoKing\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(641).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["self","onmessage","async","files","e","data","console","log","work","compressedFiles","file","compressedFile","size","compressedBlob","compressImage","blobToFile","name","push","postMessage","type","completedFiles","error","blob","fileName","File","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}